{"version":3,"sources":["../src/FormBuilder.js"],"names":["React","PropTypes","Formik","setIn","FormBuilderField","parseRules","getComputedProperties","mapPathsToTree","filterFormValues","getDefaultValues","getErrorSummaryData","defaultRenderErrorSummary","defaultRenderForm","validateForm","JSON_SPEC_VERSION","FormBuilder","props","runAction","action","fieldValue","formValues","setFieldValue","path","val","formikRef","triggerCallback","params","onActionCallback","availableActions","registeredActions","when","eq","hasOwnProperty","type","submitForm","setFieldError","state","externalErrors","getInitialErrors","formCallbackRef","bind","prevProps","configTimestamp","setValues","getInitialValues","setState","initial","initialValues","config","registeredComponents","initialErrors","node","registeredRuleConditions","registeredValidators","renderForm","renderButtons","renderErrorSummary","version","Error","pathsToTreeMap","values","computed","filteredValues","onSubmit","formikProps","fields","map","field","fieldComputedProperties","id","shown","context","errorPath","prevState","undefined","buttons","errorSummaryData","errors","errorSummary","summaryData","submitCount","isValidating","children","handleSubmit","event","clearAllExternalErrors","Component","propTypes","object","isRequired","number","func","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Formik, setIn } from 'formik';\nimport FormBuilderField from './components/FormBuilderField';\nimport { parseRules, getComputedProperties } from './rules';\nimport { mapPathsToTree, filterFormValues, getDefaultValues } from './utils';\nimport { getErrorSummaryData } from './errors';\nimport defaultRenderErrorSummary from './defaultRenderErrorSummary';\nimport defaultRenderForm from './defaultRenderForm';\nimport { validateForm } from './validation';\nimport { JSON_SPEC_VERSION } from './constants';\n\nexport default class FormBuilder extends React.Component {\n\tstatic propTypes = {\n\t\t/***\n         * The form config object used to build the form\n         */\n\t\tconfig: PropTypes.object.isRequired,\n\n\t\t/***\n         * A timestamp of the last time a new config was provided.\n         *\n         * This is important for letting the form builder know when the config has changed, failure to\n         * update the timestamp will result in unexpected results.\n         *\n         * This is an alternative to performing a deep equality check on `config`, which would affect\n         * performance.\n         */\n\t\tconfigTimestamp: PropTypes.number.isRequired,\n\n\t\t/***\n         * A key-value mapping of custom field types to the components that should render them.\n         *\n         * See DOCS.md for more details\n         *\n         * @example\n         * {\n         *   'my-custom-type': {\n         *      component: MyComponentThatImplementsIt,\n         *      defaultValue: ''\n         *    }\n         * }\n         */\n\t\tregisteredComponents: PropTypes.object,\n\n\t\t/***\n         * A key-value mapping of custom validation functions.\n         *\n         * See DOCS.md for more details\n         *\n         * @example\n         * {\n         *   'my-custom-validator': ({fieldValue, formValues, options, message=\"Default message\"}) => {\n         *      if (... thing is valid) {\n         *          return undefined;\n         *      } else {\n         *          return message;\n         *      }\n         *   }\n         * }\n         */\n\t\tregisteredValidators: PropTypes.object,\n\n\t\t/***\n         * A key-value mapping of custom action functions.\n\t\t *\n\t\t * Actions are called when a field changes, and are referenced by a 'type'.\n\t\t *\n\t\t * The action function is passed a number of parameters for use in acheiving the action.\n         *\n         * See DOCS.md for more details\n         *\n         * @example\n         * {\n         *   'my-custom-action': ({fieldValue, formValues, action, setFieldValue}) => {\n         *      // Do whatever your action required here\n\t\t * \t\t// No return value is expected\n         *   }\n         * }\n         */\n\t\tregisteredActions: PropTypes.object,\n\n\t\t/***\n         * @example\n         * {\n         *   'my-custom-action': ({fieldValue, formValues, action, setFieldValue}) => {\n         *      // Do whatever your action required here\n\t\t * \t\t// No return value is expected\n         *   }\n         * }\n         */\n\t\tregisteredRuleConditions: PropTypes.object,\n\n\t\t/***\n         * A render prop you can use to render your form's buttons (submit, cancel etc.)\n         *\n         * See DOCS.md for more details\n         */\n\t\trenderButtons: PropTypes.func,\n\n\t\t/***\n         * A render prop you can use to customise the rendering of the error summary.\n         *\n         * The error summary is passed an array of objects in the following format:\n         * {\n         *   fieldId: string,\n         *   label: node,\n         *   errors: Array<node>\n         * }\n         */\n\t\trenderErrorSummary: PropTypes.func,\n\n\t\t/***\n         * A render prop you can use to customise the rendering of your form, by default your form is\n         * rendered as a simple <form> tag.\n         *\n         * See DOCS.md for more details\n         */\n\t\trenderForm: PropTypes.func,\n\n\t\t/***\n         * Called on successful (no validation errors) submission with the form values\n         *\n         * @param {Object} values - The forms values\n         */\n\t\tonSubmit: PropTypes.func,\n\n\t\t/**\n         * Initial values of the form\n         *\n         * The form config itself can also hold initial values.\n         *\n         * If values are passed to this prop, the config value will be ignored.\n         */\n\t\tinitialValues: PropTypes.object,\n\n\t\tonActionCallback: PropTypes.func,\n\n\t\tformikRef: PropTypes.func,\n\t};\n\n\tstatic defaultProps = {\n\t\tonSubmit: () => {},\n\t\tinitialValues: undefined,\n\t\trenderForm: defaultRenderForm,\n\t\trenderErrorSummary: defaultRenderErrorSummary,\n\t\trenderButtons: () => {},\n\t\tregisteredComponents: {},\n\t\tregisteredRuleConditions: {},\n\t\tregisteredValidators: {},\n\t\tregisteredActions: {},\n\t\tonActionCallback: () => {},\n\t\tformikRef: () => {},\n\t};\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\texternalErrors: this.getInitialErrors(),\n\t\t};\n\n\t\tthis.formCallbackRef = this.formCallbackRef.bind(this);\n\n\t\tthis.formikRef = null;\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\tif (prevProps.configTimestamp !== this.props.configTimestamp) {\n\t\t\tthis.formikRef.setValues(this.getInitialValues());\n\n\t\t\t/* eslint-disable-next-line react/no-did-update-set-state */\n\t\t\tthis.setState({\n\t\t\t\texternalErrors: this.getInitialErrors(),\n\t\t\t});\n\t\t}\n\t}\n\n\tclearAllExternalErrors() {\n\t\tthis.setState({\n\t\t\texternalErrors: {},\n\t\t});\n\t}\n\n\tgetInitialValues() {\n\t\tconst initial = this.props.initialValues ? this.props.initialValues : this.props.config.initialValues;\n\n\t\treturn {\n\t\t\t...getDefaultValues(this.props.config, this.props.registeredComponents),\n\t\t\t...initial,\n\t\t};\n\t}\n\n\tgetInitialErrors() {\n\t\treturn (this.props.config && this.props.config.initialErrors) || {};\n\t}\n\n\trunAction = (action, fieldValue, formValues) => {\n\t\tconst setFieldValue = (path, val) => {\n\t\t\tthis.formikRef.setFieldValue(path, val, false);\n\t\t};\n\n\t\tconst triggerCallback = (...params) => {\n\t\t\tthis.props.onActionCallback(...params, formValues);\n\t\t};\n\n\t\tconst availableActions = {\n\t\t\t...this.props.registeredActions,\n\t\t};\n\n\t\tif (action.when && action.when.eq && action.when.eq !== fieldValue) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (availableActions.hasOwnProperty(action.type)) {\n\t\t\tavailableActions[action.type]({\n\t\t\t\taction,\n\t\t\t\tformValues,\n\t\t\t\tfieldValue,\n\t\t\t\tsetFieldValue,\n\t\t\t\ttriggerCallback,\n\t\t\t\tsubmitForm: () => {\n\t\t\t\t\tthis.formikRef.submitForm();\n\t\t\t\t},\n\t\t\t\tsetFieldError: this.formikRef.setFieldError,\n\t\t\t});\n\t\t}\n\t}\n\n\tformCallbackRef(node) {\n\t\tthis.formikRef = node;\n\t\tthis.props.formikRef(node);\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tconfig,\n\t\t\tconfigTimestamp,\n\t\t\tregisteredComponents,\n\t\t\tregisteredActions,\n\t\t\tregisteredRuleConditions,\n\t\t\tregisteredValidators,\n\t\t\trenderForm,\n\t\t\trenderButtons,\n\t\t\trenderErrorSummary,\n\t\t} = this.props;\n\n\t\t// Don't render anything if no config is provided.\n\t\tif (!config) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (config.version !== JSON_SPEC_VERSION) {\n\t\t\tthrow new Error(`JSON forms spec version mismatch. Was: ${config.version}, expected: ${JSON_SPEC_VERSION}`);\n\t\t}\n\n\t\tconst pathsToTreeMap = mapPathsToTree(config);\n\n\t\treturn (\n\t\t\t<Formik\n\t\t\t\tref={this.formCallbackRef}\n\t\t\t\tvalidateOnBlur\n\t\t\t\tvalidateOnChange\n\t\t\t\tenableReinitialize={false}\n\t\t\t\tonSubmit={values => {\n\t\t\t\t\tconst computed = parseRules(config, pathsToTreeMap, values, registeredRuleConditions);\n\n\t\t\t\t\tconst filteredValues = filterFormValues(values, config, computed, pathsToTreeMap);\n\n\t\t\t\t\tthis.props.onSubmit(filteredValues);\n\t\t\t\t}}\n\t\t\t\tinitialValues={this.getInitialValues()}\n\t\t\t\tvalidate={values => {\n\t\t\t\t\tconst computed = parseRules(config, pathsToTreeMap, values, registeredRuleConditions);\n\n\t\t\t\t\treturn validateForm(config, registeredValidators, values, computed, registeredComponents);\n\t\t\t\t}}\n\t\t\t\trender={formikProps => {\n\t\t\t\t\tconst computed = parseRules(config, pathsToTreeMap, formikProps.values, registeredRuleConditions);\n\n\t\t\t\t\t// Start a recursive loop through each field in the config\n\t\t\t\t\tconst fields = (config.fields || []).map(field => {\n\t\t\t\t\t\tconst fieldComputedProperties = getComputedProperties(computed, field.id);\n\n\t\t\t\t\t\t// Don't render if not shown :)\n\t\t\t\t\t\tif (!fieldComputedProperties.shown) {\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<FormBuilderField\n\t\t\t\t\t\t\t\tkey={field.id}\n\t\t\t\t\t\t\t\tformId={config.id}\n\t\t\t\t\t\t\t\tformik={formikProps}\n\t\t\t\t\t\t\t\tconfig={field}\n\t\t\t\t\t\t\t\tconfigTimestamp={configTimestamp}\n\t\t\t\t\t\t\t\tpath={field.path}\n\t\t\t\t\t\t\t\ttreePath={field.id}\n\t\t\t\t\t\t\t\tcomputed={computed}\n\t\t\t\t\t\t\t\tcontext={config.context}\n\t\t\t\t\t\t\t\tregisteredComponents={registeredComponents}\n\t\t\t\t\t\t\t\tregisteredRuleConditions={registeredRuleConditions}\n\t\t\t\t\t\t\t\tregisteredActions={registeredActions}\n\t\t\t\t\t\t\t\tclearExternalError={errorPath => {\n\t\t\t\t\t\t\t\t\tthis.setState(prevState => ({\n\t\t\t\t\t\t\t\t\t\texternalErrors: setIn(prevState.externalErrors, errorPath, undefined),\n\t\t\t\t\t\t\t\t\t}));\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\texternalErrors={this.state.externalErrors}\n\t\t\t\t\t\t\t\tpathsToTreeMap={pathsToTreeMap}\n\t\t\t\t\t\t\t\tonTriggerCallback={this.props.onActionCallback}\n\t\t\t\t\t\t\t\trunAction={this.runAction}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\n\t\t\t\t\t// TODO pass correct props to renderButtons()\n\t\t\t\t\tconst buttons = renderButtons();\n\n\t\t\t\t\tconst errorSummaryData = getErrorSummaryData(config, formikProps.errors, this.state.externalErrors, computed);\n\t\t\t\t\tconst errorSummary = renderErrorSummary({\n\t\t\t\t\t\tsummaryData: errorSummaryData,\n\t\t\t\t\t\tsubmitCount: formikProps.submitCount,\n\t\t\t\t\t\tisValidating: formikProps.isValidating,\n\t\t\t\t\t});\n\n\t\t\t\t\treturn renderForm({\n\t\t\t\t\t\tchildren: fields,\n\t\t\t\t\t\tbuttons: buttons,\n\t\t\t\t\t\terrorSummary: errorSummary,\n\t\t\t\t\t\t// TODO: form error summary might go in here\n\t\t\t\t\t\thandleSubmit: event => {\n\t\t\t\t\t\t\tthis.clearAllExternalErrors();\n\t\t\t\t\t\t\tformikProps.handleSubmit(event);\n\t\t\t\t\t\t},\n\t\t\t\t\t\trunAction: action => {\n\t\t\t\t\t\t\tthis.runAction(action, undefined, formikProps.values);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tformValues: formikProps.values,\n\t\t\t\t\t});\n\t\t\t\t}}\n\t\t\t/>\n\t\t);\n\t}\n}\n"],"file":"FormBuilder.js"}