{"version":3,"sources":["../../src/components/FormBuilderField.js"],"names":["React","PropTypes","isEqual","getIn","setIn","getComponent","getComputedProperties","renderFieldError","renderChildError","renderTextNode","OptimiseField","FormBuilderField","props","runActions","value","formValues","formik","values","config","path","actions","forEach","action","runAction","state","setFieldTouched","prevProps","nextFieldValue","prevFieldValue","setState","_checkAndClearValue","fields","pathsToTreeMap","isPathShown","reduce","acc","field","treePath","fieldComputedProperties","computed","shown","defaultValue","registeredComponents","type","currentValue","retainValue","setFieldValue","formId","configTimestamp","context","registeredRuleConditions","onTriggerCallback","registeredActions","externalErrors","clearExternalError","Component","Error","fieldTouched","touched","fieldErrors","errors","undefined","fieldExternalErrors","dependsOnOtherFields","shouldOptimise","length","triggersTouched","event","key","childName","node","wrappingTag","setValues","map","nestedField","nestedFieldTreePath","id","nestedFieldComputedProperties","propTypes","string","isRequired","object","number","func","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport isEqual from 'react-fast-compare';\nimport { getIn, setIn } from 'formik';\nimport { getComponent } from '../utils';\nimport { getComputedProperties } from '../rules';\nimport { renderFieldError, renderChildError } from '../errors';\nimport renderTextNode from '../renderTextNode';\nimport OptimiseField from './OptimiseField';\n\nexport default class FormBuilderField extends React.Component {\n\tstatic propTypes = {\n\t\tformId: PropTypes.string.isRequired,\n\n\t\tpath: PropTypes.string,\n\n\t\ttreePath: PropTypes.string.isRequired,\n\n\t\t/***\n\t\t * The form config object used to build the form\n\t\t */\n\t\tconfig: PropTypes.object.isRequired,\n\n\t\tconfigTimestamp: PropTypes.number.isRequired,\n\n\t\t/***\n\t\t * A key-value mapping of custom field types to the components that should render them.\n\t\t *\n\t\t * This mapping would usually be passed down from FormBuilder.js, see that component for more details.\n\t\t */\n\t\tregisteredComponents: PropTypes.object.isRequired,\n\n\t\tregisteredActions: PropTypes.object.isRequired,\n\n\t\tregisteredRuleConditions: PropTypes.object.isRequired,\n\n\t\texternalErrors: PropTypes.object.isRequired,\n\n\t\tclearExternalError: PropTypes.func.isRequired,\n\n\t\tcomputed: PropTypes.object.isRequired,\n\n\t\t/***\n\t\t * Props passed from Formik\n\t\t */\n\t\tformik: PropTypes.object.isRequired,\n\n\t\tonTriggerCallback: PropTypes.func.isRequired,\n\n\t\tpathsToTreeMap: PropTypes.object.isRequired,\n\n\t\trunAction: PropTypes.func.isRequired,\n\n\t\tcontext: PropTypes.object.isRequired,\n\t};\n\n\tstatic defaultProps = {\n\t\tpath: undefined,\n\t};\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tvalue: getIn(props.formik.values, props.path),\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.props.formik.setFieldTouched(this.props.path, false, false);\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\tconst nextFieldValue = getIn(this.props.formik.values, this.props.path);\n\t\tconst prevFieldValue = getIn(prevProps.formik.values, prevProps.path);\n\n\t\tif (!isEqual(nextFieldValue, prevFieldValue)) {\n\t\t\tthis.setState({ value: nextFieldValue }); // eslint-disable-line react/no-did-update-set-state\n\t\t}\n\t}\n\n\tcomponentWillUnmount() {\n\t\t// When a field unmounts (usually because of a show/hide rule), we need to clear it's value.\n\t\tthis._checkAndClearValue();\n\t}\n\n\t_checkAndClearValue() {\n\t\t// Here we are getting every field that has the same path as this field.\n\t\tconst fields = this.props.pathsToTreeMap[this.props.path];\n\n\t\t// Before we remove this fields value, we first need to check if there are any other fields with the\n\t\t// same path still visible. If there is another field visible, we don't want to remove the value.\n\t\tconst isPathShown = (fields || []).reduce((acc, field) => {\n\t\t\t// Don't check this field\n\t\t\tif (field.treePath === this.props.treePath) {\n\t\t\t\treturn acc;\n\t\t\t}\n\n\t\t\tconst fieldComputedProperties = getComputedProperties(this.props.computed, field.treePath);\n\n\t\t\treturn acc || fieldComputedProperties.shown;\n\t\t}, false);\n\n\n\t\t// If we are safe to remove the value: set the field as untouched and reset back\n\t\t// to the fields defaultValue.\n\t\tif (!isPathShown) {\n\t\t\tlet defaultValue;\n\n\t\t\tif (typeof this.props.config.defaultValue !== 'undefined') {\n\t\t\t\tdefaultValue = this.props.config.defaultValue;\n\t\t\t} else {\n\t\t\t\tdefaultValue = this.props.registeredComponents[this.props.config.type].defaultValue;\n\t\t\t}\n\n\t\t\tconst currentValue = this.state.value;\n\n\t\t\tthis.props.formik.setFieldTouched(this.props.path, false, false);\n\n\t\t\tif (!this.props.config.retainValue && currentValue !== defaultValue) {\n\t\t\t\tthis.props.formik.setFieldValue(this.props.path, defaultValue, false);\n\t\t\t}\n\t\t}\n\t}\n\n\trunActions = value => {\n\t\t// Unfortunately this action happens before Formik updates the state of the form.\n\t\t// In order to ensure that the all values are sent with this request, we manually add\n\t\t// the field value of the changed field.\n\t\tconst formValues = setIn(this.props.formik.values, this.props.config.path, value);\n\n\t\t(this.props.config.actions || []).forEach(action => {\n\t\t\tthis.props.runAction(action, value, formValues);\n\t\t});\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tformId,\n\t\t\ttreePath,\n\t\t\tpath,\n\t\t\tconfig,\n\t\t\tconfigTimestamp,\n\t\t\tcontext,\n\t\t\tregisteredComponents,\n\t\t\tregisteredRuleConditions,\n\t\t\tonTriggerCallback,\n\t\t\tregisteredActions,\n\t\t\tcomputed,\n\t\t\tformik,\n\t\t\texternalErrors,\n\t\t\tclearExternalError,\n\t\t\tpathsToTreeMap,\n\t\t} = this.props;\n\n\t\tconst Component = getComponent(registeredComponents, config.type);\n\n\t\tif (!Component) {\n\t\t\tthrow new Error(`FormBuilderField: Could not find component of type \"${config.type}\".`);\n\t\t}\n\n\t\tif (!formId) {\n\t\t\tthrow new Error('FormBuilderField: \"config.id\" is a required prop.');\n\t\t}\n\n\t\tconst fieldComputedProperties = getComputedProperties(computed, treePath);\n\n\t\tconst fieldTouched = !!getIn(formik.touched, path); // Ensure this is a boolean to keep prop-type warnings away\n\t\tconst fieldErrors = path ? getIn(formik.errors, path) : undefined;\n\t\tlet fieldExternalErrors = path ? getIn(externalErrors, path) : undefined;\n\n\t\tif (typeof fieldExternalErrors === 'string') {\n\t\t\tfieldExternalErrors = [fieldExternalErrors];\n\t\t}\n\n\t\tconst dependsOnOtherFields = this.props.registeredComponents[this.props.config.type].dependsOnOtherFields;\n\n\t\tconst shouldOptimise = !dependsOnOtherFields && (!config || !config.fields || !config.fields.length);\n\n\t\treturn (\n\t\t\t<OptimiseField\n\t\t\t\tshouldOptimise={shouldOptimise}\n\t\t\t\tconfigTimestamp={configTimestamp}\n\t\t\t\tvalue={this.state.value}\n\t\t\t\tfieldErrors={fieldErrors}\n\t\t\t\tfieldExternalErrors={fieldExternalErrors}\n\t\t\t\ttouched={fieldTouched}\n\t\t\t\tcomputed={fieldComputedProperties}\n\t\t\t>\n\t\t\t\t<Component\n\t\t\t\t\tpath={path}\n\t\t\t\t\thtmlId={`${formId}.${treePath}`}\n\t\t\t\t\tconfig={config}\n\t\t\t\t\trunActions={this.runActions}\n\t\t\t\t\thandleChange={(value, triggersTouched = true) => {\n\t\t\t\t\t\tclearExternalError(path);\n\t\t\t\t\t\tthis.runActions(value);\n\n\t\t\t\t\t\tif (triggersTouched) {\n\t\t\t\t\t\t\tformik.setFieldTouched(path, true, false);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tformik.setFieldValue(path, value, true);\n\t\t\t\t\t}}\n\t\t\t\t\thandleBlur={(/* e */) => {\n\t\t\t\t\t\tclearExternalError(path);\n\t\t\t\t\t\tformik.setFieldTouched(path, true, true);\n\t\t\t\t\t}}\n\t\t\t\t\thandleChangeFast={value => {\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\tvalue: value,\n\t\t\t\t\t\t});\n\t\t\t\t\t}}\n\t\t\t\t\thandleBlurFast={(/* e */) => {\n\t\t\t\t\t\tclearExternalError(path);\n\t\t\t\t\t\tthis.runActions(this.state.value);\n\t\t\t\t\t\tformik.setFieldValue(path, this.state.value, false);\n\t\t\t\t\t\tformik.setFieldTouched(path, true, true);\n\t\t\t\t\t}}\n\t\t\t\t\thandleKeyPressFast={event => {\n\t\t\t\t\t\tif (event.key === 'Enter') {\n\t\t\t\t\t\t\tformik.setFieldValue(path, this.state.value, false);\n\t\t\t\t\t\t}\n\t\t\t\t\t}}\n\t\t\t\t\tcomputed={fieldComputedProperties}\n\t\t\t\t\tvalue={this.state.value}\n\t\t\t\t\terrors={fieldErrors}\n\t\t\t\t\texternalErrors={fieldExternalErrors}\n\t\t\t\t\ttouched={fieldTouched}\n\t\t\t\t\tgetDisplayError={() => {\n\t\t\t\t\t\treturn renderFieldError(fieldErrors, fieldExternalErrors, fieldTouched);\n\t\t\t\t\t}}\n\t\t\t\t\tgetChildError={childName => {\n\t\t\t\t\t\treturn renderChildError(childName, fieldErrors, fieldExternalErrors, fieldTouched);\n\t\t\t\t\t}}\n\t\t\t\t\trenderTextNode={(node, wrappingTag) => renderTextNode(node, wrappingTag, context)}\n\t\t\t\t\tsetValues={formik.setValues}\n\t\t\t\t\tformValues={formik.values}\n\t\t\t\t>\n\t\t\t\t\t{(config.fields || []).map(nestedField => {\n\t\t\t\t\t\tconst nestedFieldTreePath = `${treePath}.${nestedField.id}`;\n\t\t\t\t\t\tconst nestedFieldComputedProperties = getComputedProperties(computed, nestedFieldTreePath);\n\n\t\t\t\t\t\t// Don't render if not shown :)\n\t\t\t\t\t\tif (!nestedFieldComputedProperties.shown) {\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<FormBuilderField\n\t\t\t\t\t\t\t\tkey={nestedField.id}\n\t\t\t\t\t\t\t\tcontext={context}\n\t\t\t\t\t\t\t\tformId={formId}\n\t\t\t\t\t\t\t\tformik={formik}\n\t\t\t\t\t\t\t\tconfig={nestedField}\n\t\t\t\t\t\t\t\tconfigTimestamp={configTimestamp}\n\t\t\t\t\t\t\t\tpath={nestedField.path}\n\t\t\t\t\t\t\t\ttreePath={nestedFieldTreePath}\n\t\t\t\t\t\t\t\tcomputed={computed}\n\t\t\t\t\t\t\t\tregisteredActions={registeredActions}\n\t\t\t\t\t\t\t\tregisteredComponents={registeredComponents}\n\t\t\t\t\t\t\t\tregisteredRuleConditions={registeredRuleConditions}\n\t\t\t\t\t\t\t\texternalErrors={externalErrors}\n\t\t\t\t\t\t\t\tclearExternalError={clearExternalError}\n\t\t\t\t\t\t\t\tpathsToTreeMap={pathsToTreeMap}\n\t\t\t\t\t\t\t\tonTriggerCallback={onTriggerCallback}\n\t\t\t\t\t\t\t\trunAction={this.props.runAction}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</Component>\n\t\t\t</OptimiseField>\n\t\t);\n\t}\n}\n"],"file":"FormBuilderField.js"}